{{ 'login-register.css' | asset_url | stylesheet_tag }}
<script
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAEbeab1tjvjCM0g95bVgRTI1iR5yPln1Q&libraries=places"
></script>
<style>
  /* Style for the popup */
  #popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 20px;
    background-color: white;
    z-index: 1000;
  }

  /* Style for the map container */
  #map {
    height: 300px;
    width: 100%;
    margin-bottom: 10px;
  }

  /* Style for the location text */
  #locationText {
    font-weight: bold;
  }
</style>
<div class="row">
  <div class="small-12 columns">
    <div class="thb-form-container">
      <div class="thb-register-form">
        {% form 'create_customer', novalidate: 'novalidate' %}
          <h5>{{ 'customer.login_page.create_account' | t }}</h5>
          <h4>{{ 'customer.login_page.create_account_dec' | t }}</h4>
          <p>{{ 'customer.login_page.create_account_description' | t }}</p>
          {% if form.errors %}
            <div class="form-notification error">
              {% render 'svg-icons' with 'thb-error' %}
              {{ form.errors | default_errors }}
            </div>
          {% endif %}
          <div class="create_form_wrapper">
            <div class="fields">
              <div class="field">
                <label for="first_name">{{ 'customer.login_page.first_name' | t }}</label>
                <input
                  type="text"
                  name="customer[first_name]"
                  class="full"
                  value="{% if form.first_name %}{{ form.first_name }}{% endif %}"
                  placeholder="{{ 'customer.login_page.first_name' | t }}"
                >
              </div>
              <div class="field">
                <label for="last_name">{{ 'customer.login_page.last_name' | t }}</label>
                <input
                  type="text"
                  name="customer[last_name]"
                  class="full"
                  value="{% if form.last_name %}{{ form.last_name }}{% endif %}"
                  placeholder="{{ 'customer.login_page.last_name' | t }}"
                >
              </div>
            </div>
            <div class="field">
              <label for="number">{{ 'customer.login_page.Mobile' | t }}</label>
              <div class="field--country_codee">
                <span>+971</span>
                <input
                  type="number"
                  placeholder="{{ 'customer.login_page.mobile'| t }}"
                  class="full numeric"
                  name="number"
                  id="mobile"
                  pattern="[0-9]*"
                  inputmode="numeric"
                  required
                >
              </div>
            </div>
            <div class="field">
              <label for="email">{{ 'customer.login_page.email' | t }}</label>
              <input
                type="email"
                name="customer[email]"
                class="full {% if form.errors contains 'email' %}invalid{% endif %}"
                value=""
                placeholder="{{ 'customer.login_page.email_place' | t }}"
              >
            </div>

            <div class="field">
              <label for="confirm_email">{{ 'customer.login_page.confirm_email' | t }}</label>
              <input
                type="email"
                name="customer[confirm_email]"
                class="full {% if form.errors contains 'confirm_email' %}invalid{% endif %}"
                value=""
                placeholder="{{ 'customer.login_page.confirm_email_place' | t }}"
              >
            </div>

            <div class="field">
              <label for="locationInput">{{ 'customer.login_page.address' | t }}</label>
              <input
                type="text"
                name="addressInput"
                id="locationInput"
                placeholder="{{ 'customer.login_page.address_place' | t }}"
                onkeydown="handleEnterKey(event)"
              >
              <div class="location_icon" onclick="openPopup()">
                {% render 'svg-icons' with 'location' %}
              </div>           

            <!-- Popup content -->
            <div id="popup">
              <!-- Input field for address -->
              <label for="addressInput">Address</label>
              <input type="text" id="addressInput" placeholder="Enter address" onkeydown="handleEnterKey(event)">

              <!-- Container for the map -->
              <div id="map"></div>

              <!-- Display selected location as text -->
              <div id="locationText"></div>

              <!-- Button to show map based on address -->
              <button type="button" onclick="showMapForAddress()">Show on Map</button>

              <!-- Close button -->
              <button type="button" onclick="closePopup()">Close</button>
            </div>
            </div>

            <!--
              <div class="field-area">
                <div id="popup">
                  <div class="popup-wrapper">
                    <h1 class="popup-title">Validate your Mobile Number</h1>
                    <p class="popup-subtitle">We sent a code to your Mobile Phone.</p>
                    <div class="popup-otp-wrapper">
                      <label for="OneTimePassword">One Time Password</label>
                      <div class="popup-otp-input-box">
                        <input
                          type="text"
                          name="OneTimePassword"
                          id="OneTimePassword1"
                          maxlength="1"
                          oninput="validateAndSwitch(this, 'OneTimePassword2')"
                        >
                        <input
                          type="text"
                          name="OneTimePassword"
                          id="OneTimePassword2"
                          maxlength="1"
                          oninput="validateAndSwitch(this, 'OneTimePassword3')"
                        >
                        <input
                          type="text"
                          name="OneTimePassword"
                          id="OneTimePassword3"
                          maxlength="1"
                          oninput="validateAndSwitch(this, 'OneTimePassword4')"
                        >
                        <input
                          type="text"
                          name="OneTimePassword"
                          id="OneTimePassword4"
                          maxlength="1"
                          oninput="validateAndSwitch(this, 'OneTimePassword5')"
                        >
                        <input
                          type="text"
                          name="OneTimePassword"
                          id="OneTimePassword5"
                          maxlength="1"
                          oninput="validateAndSwitch(this, null)"
                        >
                      </div>
                      <p class="timing">Resend code in <span>56s</span></p>
                      <button onclick="savePopup(event)">Validate your Mobile Number</button>
                    </div>
                  </div>
                </div>
              </div>
            -->          

            <div class="field">
              <label for="address" name="address">{{ 'customer.login_page.address2' | t }}</label>
              <textarea
                name="address"
                placeholder="{{ 'customer.login_page.address2_place' | t }}"
                class="full"
                id="address"
              ></textarea>
            </div>

            <div class="fields">
              <div class="field">
                <label for="regi_city" name="city">{{ 'customer.addresses.city' | t }}</label>
                <select
                  name="city"
                  id="regi_city"
                  placeholder="{{ 'customer.addresses.city_reg' | t }}"
                  class="full"
                  onchange="getCityDistricts(this.value)"
                >
                  <option value="">{{ 'customer.addresses.city_reg' | t }}</option>
                </select>
              </div>

              <div class="field">
                <label for="district">{{ 'customer.addresses.district' | t }}</label>
                <select
                  name="district"
                  placeholder="{{ 'customer.addresses.district_reg' | t }}"
                  id="district"
                  class="full"
                >
                  <option value="">{{ 'customer.addresses.district_reg' | t }}</option>
                </select>
              </div>
            </div>
            <div class="terms_condition-checkbox">
              <input type="checkbox" value="" required>
              <span>I accept and agree to the <a href="#">Terms and Condition</a></span>
            </div>
            <button type="button" class="button full" id="regi_button">
              <span>{{ 'customer.login_page.submit_register' | t }}</span>
            </button>

            <div style="visibility:hidden;height:0">
              <div class="fields">
                <div class="field">
                  <label for="first_name">{{ 'customer.login_page.first_name' | t }}</label>
                  <input
                    type="text"
                    name="customer[first_name]"
                    class="full"
                    value="{% if form.first_name %}{{ form.first_name }}{% endif %}"
                    placeholder="{{ 'customer.login_page.first_name' | t }}"
                  >
                </div>
                <div class="field">
                  <label for="last_name">{{ 'customer.login_page.last_name' | t }}</label>
                  <input
                    type="text"
                    name="customer[last_name]"
                    class="full"
                    value="{% if form.last_name %}{{ form.last_name }}{% endif %}"
                    placeholder="{{ 'customer.login_page.last_name' | t }}"
                  >
                </div>
              </div>
              <div class="field">
                <label for="email">{{ 'customer.login_page.email' | t }}</label>
                <input
                  type="email"
                  name="customer[email]"
                  class="full {% if form.errors contains 'email' %}invalid{% endif %}"
                  value=""
                  placeholder="{{ 'customer.login_page.email' | t }}"
                >
              </div>
              <div class="field">
                <label for="password">{{ 'customer.login_page.password' | t }}</label>
                <input
                  type="password"
                  name="customer[password]"
                  class="full"
                  value=""
                  placeholder="{{ 'customer.login_page.password' | t }}"
                >
              </div>

              <button type="submit" class="button full">
                <span>{{ 'customer.login_page.submit_register' | t }}</span>
              </button>
            </div>
          </div>
        {% endform %}
        <div class="switch-login-section">
          {{ 'customer.login_page.already_have_an_account' | t }}
          {% assign text_button_title = 'customer.login_page.login' | t %}
          {% render 'text-button', url: routes.account_login_url, title: text_button_title %}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  /*** city and dis Start ***/
  document.addEventListener("DOMContentLoaded", function() {

      getCityDistricts(0);

    // document.getElementById("regi_button").addEventListener("click", function(event) {
    // });
  });

  function getCityDistricts(id){
      // alert(id);
      const apiUrl = 'https://alainuat.gdadmin.org/laravel/public/api/getCityDistricts/'+id;
      
      // Use the fetch function to make a GET request to the API
      fetch(apiUrl, {
        method: 'GET',
       
      })
      .then(response => {
        if (!response.ok) {
          throw new Error(`Network response was not ok: ${response.status}`);
        }
        
        return response.json();
      })
      .then(data => {
        // console.log('data', data.response);
        if(id == 0){
          let city = "<option>{{ 'customer.addresses.city_reg' | t }}</option>";
          data.response.forEach(function (item) {
            city += `<option value="${item.id}">${item.city_name}</option>`;
          });
          document.getElementById("regi_city").innerHTML = city;
        }else{
          let districts = "<option>{{ 'customer.addresses.district_reg' | t }}</option>";
          data.response.forEach(function (item) {
            districts += `<option value="${item.id}">${item.district_name}</option>`;
          });
          document.getElementById("district").innerHTML = districts;
        }
      })
      .catch(error => {
        // Handle errors that may occur during the fetch operation
        console.error('Error fetching data:', error);
      });
  }
/*** city and dis end ***/

/*** Pop up start OTP ***/
//   function openPopup() {
//     document.getElementById('popup').style.display = 'block';
//   }

//   function closePopup() {
//     document.getElementById('popup').style.display = 'none';
//   }

//   function savePopup(event) {
//     // Add logic here to handle the data entered in the popup
//     // For now, let's just close the popup without refreshing the page
//     closePopup();

//     // Prevent the default form submission behavior
//     event.preventDefault();
//   }
// function validateAndSwitch(input, nextFieldId) {
//     // Remove non-numeric characters
//     input.value = input.value.replace(/[^0-9a-zA-Z]/g, '');

//     // Ensure only one character is entered
//     if (input.value.length > 1) {
//         input.value = input.value.charAt(0);
//     }

//     // Switch focus to the next input field
//     if (input.value.length === 1 && nextFieldId) {
//         document.getElementById(nextFieldId).focus();
//     }
// }
/*** Pop up End OTP ***/

  /*** Pop up start MAP ***/

   var map;

    // Function to initialize the map
    function initMap() {
      // Create a new map instance and set its properties
      map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 0, lng: 0 }, // Set the initial map center
        zoom: 10, // Set the initial zoom level
      });

      // Add a click event listener to the map to capture the selected location
      google.maps.event.addListener(map, 'click', function(event) {
        updateLocation(event.latLng);
      });

      // Add a dragend event listener to the map to capture the dragged location
      google.maps.event.addListener(map, 'dragend', function() {
        updateLocation(map.getCenter());
      });
    }

    // Function to open the popup
    function openPopup() {
      document.getElementById('popup').style.display = 'block';

      // Initialize the map when the popup is opened
      initMap();
    }

    // Function to close the popup
    function closePopup() {
      document.getElementById('popup').style.display = 'none';
    }

    // Function to update the location information
    function updateLocation(location) {
      // Update the input field with the selected location
      let apiAdd = `https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyAEbeab1tjvjCM0g95bVgRTI1iR5yPln1Q&latlng=${location.lat()},${location.lng()}`
    /** get address form lag and lng **/ 
    fetch(apiAdd)
      .then(response => {
          if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
          }
          return response.json();
      })
      .then(data => {
          document.getElementbyId('locationText').innderText = data.results[0]['formatted_address'];
          document.getElementById('locationInput').value = data.results[0]['formatted_address'];
      })
      .catch(error => {});
        console.error('Error fetching data:', error);
      }
      /** END  get address form lag and lng **/ 
    // Function to handle Enter key on the address input field
    function handleEnterKey(event) {
      if (event.key === 'Enter') {
        // Prevent the default Enter key behavior (form submission)
        event.preventDefault();

        // Update location based on entered address
        updateLocationForAddress();
      }
    }

    // Function to update the location based on entered address
    function updateLocationForAddress() {
      var address = document.getElementById('addressInput').value;

      // Use Google Maps Geocoding API to convert the address into latitude and longitude
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode({ 'address': address }, function(results, status) {
        if (status == 'OK' && results[0]) {
          var location = results[0].geometry.location;

          // Update the map center
          map.setCenter(location);

          // Update the location information
          updateLocation(location);
        }
      });
    }

    // Function to show map based on entered address
    function showMapForAddress() {
      updateLocationForAddress();
    }
  
  /*** Pop up end MAP ***/
</script>
